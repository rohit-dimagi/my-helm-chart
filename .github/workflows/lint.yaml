name: Lint and Test Charts

on: pull_request

jobs:
  # lint-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Install Helm
  #       uses: azure/setup-helm@v3
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}

  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.9'
  #         check-latest: true

  #     - name: Install chart-testing
  #       uses: helm/chart-testing-action@v2.4.0

  #     - name: Run chart-testing (list-changed)
  #       id: list-changed
  #       run: |
  #         changed=$(ct list-changed --config ct.yaml)
  #         if [[ -n "$changed" ]]; then
  #           echo "{changed}={true}" >> $GITHUB_OUTPUT
  #         fi

  #     - name: Run chart-testing (lint)
  #       run: ct lint --config ct.yaml

  #     - name: Create kind cluster
  #       uses: helm/kind-action@v1.5.0
  #       if: ${{ needs.list-changed.outputs.changed }} == 'true'

  #     - name: Run chart-testing (install)
  #       run: ct install --config ct.yaml
  
  changes:
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.transform.outputs.directories }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          list-files: shell
          filters: |
            charts:
              - charts/**
      - name: transform to directories
        id: transform
        continue-on-error: false
        run: |
          folders=()
          for f in ${{ steps.filter.outputs.charts_files }}; \
            do \
              echo "Adding $(dirname $f) to folders"; \
              folders+=($(dirname $f)); \
          done
          unique_folders=($(printf "%s\n" "${folders[@]}" | cut -d '/' -f2 | sort -u | tr '\n' ' '))
          echo "directories=$(jq --compact-output --null-input '$ARGS.positional' --args -- ${unique_folders[@]})" >> $GITHUB_OUTPUT
      - name: run cat
        run: echo ${{ steps.transform.outputs.directories }}
        
  release:
    runs-on: ubuntu-latest
    needs: changes
    permissions: write-all
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.changes.outputs.directories) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: package helm
        run: |
          helm package charts/${{ matrix.directory }}
      - name: run pip
        if: always()
        run: |
          pip3 install -r requirements.txt 
      - name: run script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHART_NAME: ${{ matrix.directory }}
          CHART_VERSION: "0.0.1"
        run: python3 app.py