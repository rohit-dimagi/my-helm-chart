name: Lint and Test Charts

on:
  workflow_call:
    outputs:
      charts_name:
        value: ${{ jobs.changes.outputs.directories }}
      chart_details: 
        value: ${{ jobs.changes.outputs.versions }}
jobs:
  # lint-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

      # - name: Install Helm
      #   uses: azure/setup-helm@v3
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}

      # - uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.9'
      #     check-latest: true

      # - name: Install chart-testing
      #   uses: helm/chart-testing-action@v2.4.0

      # - name: Run chart-testing (list-changed)
      #   id: list-changed
      #   run: |
      #     changed=$(ct list-changed --config ct.yaml)
      #     if [[ -n "$changed" ]]; then
      #       echo "{changed}={true}" >> $GITHUB_OUTPUT
      #     fi

      # - name: Run chart-testing (lint)
      #   run: ct lint --config ct.yaml
  
  changes:
    #needs: [lint-test]
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.transform.outputs.charts }}
      #versions: ${{ steps.transform.outputs.versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          list-files: shell
          filters: |
            charts:
              - charts/**
      - name: transform to directories
        id: transform
        continue-on-error: false
        run: |
          python app.py ${{ steps.filter.outputs.charts_files }} >> $GITHUB_OUTPUT

      - name: Get Chart Versions
        run: |
         echo ${{ steps.transform.outputs.charts }}
         echo ${{ fromJSON(steps.transform.outputs.charts).directories }}
        #echo ${{ steps.transform.outputs.versions }}
  
  # check_release:
  #   runs-on: ubuntu-latest
  #   needs: changes
  #   outputs:
  #     directories: ${{ steps.transform.outputs.directories }}
  #   permissions: write-all
  #   strategy:
  #     matrix:
  #       directory: ${{ fromJSON(needs.changes.outputs.directories) }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: Install Helm
  #       uses: azure/setup-helm@v3
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #     - name: package helm
  #       run: |
  #         helm package charts/${{ matrix.directory }}
